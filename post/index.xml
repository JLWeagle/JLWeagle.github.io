<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on TylerW的部落格</title>
    <link>/post/</link>
    <description>Recent content in Posts on TylerW的部落格</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 15 Nov 2021 20:01:59 +0800</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>校园网配置IPv6 NAT</title>
      <link>/p/%E6%A0%A1%E5%9B%AD%E7%BD%91%E9%85%8D%E7%BD%AEipv6-nat/</link>
      <pubDate>Mon, 15 Nov 2021 20:01:59 +0800</pubDate>
      
      <guid>/p/%E6%A0%A1%E5%9B%AD%E7%BD%91%E9%85%8D%E7%BD%AEipv6-nat/</guid>
      <description>前言 前一阵子给软路由折腾IPv6全局代理，配合AP实现所有连接的设备不走校园网计费流量。但是连接的每个终端无法直接访问纯IPv6网站了，原因是软路由没有给LAN口分配IPv6地址，于是开始折腾尝试解决这个问题。
准备  网络：校园网IPv4/IPv6双栈 硬件：软路由FriendlyElec NanoPi R2S 固件：OpenWrt R21.8.6 / LuCI Master  LAN口获取IPv6地址的三种方式  IPv6穿透：将WAN口与LAN口桥接，路由器相当于交换机，连接的设备能够直接通过DHCPv6服务获取原生IPv6地址。但考虑到要使用Passwall等插件进行全局代理达到免流的效果，路由器自身需能够访问IPv6服务器，IPv6穿透这个方式行不通。 IPv6中继：中继模式可以让路由器自身与LAN口连接的终端都获取到原生的IPv6地址，使用OpenWrt中的odhcpd可以实现。通过对/etc/config/dhcp配置文件进行修改，WAN口和LAN口连接的设备均可以获取到20开头的公网IPv6地址。但是在我这边的环境配置后，LAN口连接的设备无论是DHCPv6还是SLAAC获取到的IP，都没有访问公网的权限。个人猜测是校园网认证的原因，因此只能使用第三种方式。 IPv6 NAT：网络地址转换(NAT, Network Address Translation)是为了解决IPv4地址短缺所提出的技术，普遍应用在有多台主机但只通过一个公网IP地址访问互联网的私有网络中。理论上IPv6拥有2^128 = 340,282,366,920,938,463,463,374,607,431,768,211,456个地址，不会存在短缺的情况，按理说也就并不需要使用NAT。但是仍然存在IPv6 NAT这种接入方式。这种方式配置简单，缺点是连接的设备没有公网IPv6地址，不能直接被外部设备访问。  IPv6 NAT配置步骤 WAN口设置 登录OpenWrt后台，如果网络 - 接口中已经有WAN6可以跳过这一步；没有的话添加新接口，基本设置如下表：
   协议 DHCPv6客户端     请求IPv6地址 try   请求指定长度的IPv6前缀 自动    高级设置中勾选使用内置的IPv6管理，物理设置中选择与WAN口相同的以太适配器，防火墙设置中选择区域WAN，设置好后保存&amp;amp;应用。
WAN6接口连接成功后，可以看到获取到了公网的IPv6地址： WAN6接口信息
IPv6 ULA前缀设置 唯一本地地址(ULA, Unique Local Address)是IPv6地址在fc00::/7范围内的网段。OpenWrt默认的ULA设置的是fd00::/8内的地址，在fd00::/8范围内的地址和IPv4私有网段地址拥有类似的特性：不能保证它们在全球范围内是唯一的，只能在私有网络内进行路由，无法路由到外网。
在网络 - 接口中的全局网络选项，将IPv6 ULA前缀的第一位由f改为d，例如我的前缀为dd92:770a:ba04::/48，保存&amp;amp;应用后应该可以看到LAN口信息中的IPv6地址： LAN接口信息
LAN口设置 接下来，在网络 - 接口中修改LAN口配置，在一般配置 - 高级设置中勾选使用内置的IPv6管理，DHCP服务器 - IPv6设置如下：</description>
    </item>
    
    <item>
      <title>Ubuntu 21.04 搭建TeamSpeak服务端</title>
      <link>/p/ubuntu-21.04-%E6%90%AD%E5%BB%BAteamspeak%E6%9C%8D%E5%8A%A1%E7%AB%AF/</link>
      <pubDate>Sat, 13 Nov 2021 18:09:52 +0800</pubDate>
      
      <guid>/p/ubuntu-21.04-%E6%90%AD%E5%BB%BAteamspeak%E6%9C%8D%E5%8A%A1%E7%AB%AF/</guid>
      <description>前言 TeamSpeak以其游戏语音聊天功能闻名，与主流的语音软件相比，它拥有高语音质量、低延时，更少的带宽使用和提供游戏内叠加等优点。使用起来也比其它“语音电话”的方式要简洁、舒适一些。
准备  一个装有Ubuntu 21.04系统的VPS VPS的管理员访问权限  搭建步骤 登录服务器并更新软件包 首先，使用SSH登录VPS，Windows下可以使用PuTTY等软件连接SSH：
ssh root@服务器IP地址检查并更新已安装的软件包：
apt-get update -yapt-get upgrade -y安装TeamSpeak服务端 添加一个单独的用户来运行TeamSpeak服务端：
adduser --disabled-login teamspeak添加用户时的信息可以一路回车。创建好后，切换到TeamSpeak用户，下载最新的TeamSpeak服务端文件：
su - teamspeakwget https://files.teamspeak-services.com/releases/server/3.13.6/teamspeak3-server_linux_amd64-3.13.6.tar.bz2解压下载好的压缩包，移动到TeamSpeak用户目录下并删除文件夹与压缩包：
tar xvfj teamspeak3-server_linux_amd64-3.13.6.tar.bz2cp teamspeak3-server_linux_amd64/* -R /home/teamspeak/rm -rf teamspeak3-server_linux_amd64 teamspeak3-server_linux_amd64-3.13.6.tar.bz2创建服务端的License文件，切换回root：
touch .ts3server_license_acceptedexit配置TeamSpeak服务文件 接下来，创建TeamSpeak的Systemd服务文件：
vim /lib/systemd/system/ts3server.service复制以下内容并保存：
[Unit]Description=Teamspeak ServiceWants=network.target[Service]WorkingDirectory=/home/teamspeakUser=teamspeakExecStart=/home/teamspeak/ts3server_minimal_runscript.shExecStop=/home/teamspeak/ts3server_startscript.sh stopExecReload=/home/teamspeak/ts3server_startscript.sh restartRestart=alwaysRestartSec=15[Install]WantedBy=multi-user.target防火墙放行语音和文件传输的端口，重启防火墙：
ufw allow 9987ufw allow 30033ufw reload重启Systemd服务，运行TeamSpeak服务端并将其设置为开机自启：</description>
    </item>
    
  </channel>
</rss>
